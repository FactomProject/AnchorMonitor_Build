{"version":3,"file":"static/webpack/static/development/pages/index.js.dab73efe41925c632d1b.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Layout from '../components/Layout'\nimport moment from 'moment'\nimport axios from 'axios'\n\nexport default class Main extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: props.name === 'BTC' ? 'Bitcoin' : props.name === 'ETH' ? 'Ethereum' : null,\n            offNotiToggle: false,\n            pendingNotiToggle: false,\n            lastOff: this.props.lastOff,\n            pendingNoti: this.props.pendingNoti,\n        }\n\n        this.showMenuOffNoti = this.showMenuOffNoti.bind(this);\n        this.closeMenuOffNoti = this.closeMenuOffNoti.bind(this);\n        this.offNotiSelect = this.offNotiSelect.bind(this);\n        this.showMenuPendingNoti = this.showMenuPendingNoti.bind(this);\n        this.closeMenuPendingNoti = this.closeMenuPendingNoti.bind(this);\n        this.pendingNotiSelect = this.pendingNotiSelect.bind(this);\n\n        setInterval(() => {\n            Main.getInitialProps\n        }, 2000)\n    }\n\n    static getInitialProps({ query: { name, data, lastConf, balance, lastOff, pendingNoti } }) {\n        return { name: name, data: data, lastConf: lastConf, balance: balance, lastOff: lastOff, pendingNoti: pendingNoti }\n    }\n\n    showMenuOffNoti = (event) => {\n        event.preventDefault();\n        this.setState({ offNotiToggle: true }, () => {\n            document.addEventListener('click', this.closeMenuOffNoti);\n        });\n    }\n\n    closeMenuOffNoti = () => {\n        this.setState({ offNotiToggle: false }, () => {\n            document.removeEventListener('click', this.closeMenuOffNoti);\n        });\n    }\n\n    offNotiSelect = (event) => {\n        if (event.target.value === 30) {\n            axios.post(`http://localhost:3000/offnotificationchange`, null, { params: { time: \"30 Minutes\" } })\n            this.setState({\n                lastOff: \"30 Minutes\"\n            })\n        } else {\n            axios.post(`http://localhost:3000/offnotificationchange`, null, { params: { time: event.target.value } }).then(this.forceUpdate())\n            this.setState({\n                lastOff: event.target.value\n            })\n        }\n    }\n\n    showMenuPendingNoti = (event) => {\n        event.preventDefault();\n        this.setState({ pendingNotiToggle: true }, () => {\n            document.addEventListener('click', this.closeMenuPendingNoti);\n        });\n    }\n\n    closeMenuPendingNoti = () => {\n        this.setState({ pendingNotiToggle: false }, () => {\n            document.removeEventListener('click', this.closeMenuPendingNoti);\n        });\n    }\n\n    pendingNotiSelect = (event) => {\n        axios.post(`http://localhost:3000/pendingtimenotification`, null, { params: { time: event.target.value } })\n    }\n\n    render() {\n        let { name, pendingNotiToggle, offNotiToggle, lastOff, pendingNoti } = this.state;\n        let { data, lastConf, balance } = this.props;\n        console.log(\"pendingNoti: \", pendingNoti);\n        let offHolder = \"30 Minutes\";\n        if (lastOff !== offHolder) {\n            offHolder = (lastOff === \"1\" || lastOff === 1) ? \"1 hour\" : `${lastOff} hours`\n        }\n        let countHolder = \"1 Block\";\n        countHolder = (pendingNoti !== 1 || pendingNoti !== \"1\") ? `${pendingNoti} Blocks` : `${pendingNoti} Block`\n\n        return (\n            <Layout title='Bitcoin Anchors'>\n                <div className=\"Hero\">\n                    {Array.isArray(data) ? (\n                        data.length !== 0 ? (\n                            <div className=\"HeroGroup\">\n                                <div className=\"HeroGroupHeader\">\n                                    <h1>Pending {name} Anchors</h1>\n                                    <div className=\"tableHeaderContent\">\n                                        <div className=\"select\" style={{ gridArea: \"offNoti \", display: \"grid\", gridTemplateColumns: \"255px 130px\" }}>\n                                            <small style={{ justifySelf: \"start\" }}>Turn off notifications for: </small>\n                                            <span className={`placeholder \n                                                            ${offHolder.length === \"30 Minutes\".length ? \"\" : null}\n                                                            ${offHolder.length === \"1 hour\".length ? \"short\" : null}\n                                                            ${offHolder.length === \"3 hours\".length ? \"singlehours\" : null}\n                                                            ${offHolder.length === \"12 hours\".length ? \"doublehours\" : null}\n                                                            `} onClick={this.showMenuOffNoti}>{offHolder}</span>\n                                            {offNotiToggle ? (\n                                                <ul>\n                                                    <li onClick={this.offNotiSelect} value=\"30\">30 Minutes</li>\n                                                    <li onClick={this.offNotiSelect} value=\"1\">1 hour</li>\n                                                    <li onClick={this.offNotiSelect} value=\"3\">3 hours</li>\n                                                    <li onClick={this.offNotiSelect} value=\"6\">6 hours</li>\n                                                    <li onClick={this.offNotiSelect} value=\"9\">9 hours</li>\n                                                    <li onClick={this.offNotiSelect} value=\"12\">12 hours</li>\n                                                    <li onClick={this.offNotiSelect} value=\"24\">24 hours</li>\n                                                </ul>\n                                            ) : (null)}\n                                            <input type=\"hidden\" name=\"changeme\" />\n                                        </div>\n                                        <div className=\"select\" style={{ gridArea: \"pendingNoti\", display: \"grid\", gridTemplateColumns: \"255px 130px\" }}>\n                                            <small style={{ justifySelf: \"start\" }}>Pending count before notifying: </small>\n                                            <span className={`placeholder \n                                                            ${countHolder.length === \"1 Block\".length ? \"small\" : null}\n                                                            ${countHolder.length === \"2 Blocks\".length ? \"doublehours\" : null}\n                                                            ${countHolder.length === \"18 Blocks\".length ? \"doubleblks\" : null}\n                                                            ${countHolder.length === \"144 Blocks\".length ? \"doublehours\" : null}\n                                                            `} onClick={this.showMenuPendingNoti}>{countHolder}</span>\n                                            {pendingNotiToggle ? (\n                                                <ul>\n                                                    <li onClick={this.pendingNotiSelect} value=\"1\">1 Block</li>\n                                                    <li onClick={this.pendingNotiSelect} value=\"2\">2 Blocks</li>\n                                                    <li onClick={this.pendingNotiSelect} value=\"4\">4 Blocks</li>\n                                                    <li onClick={this.pendingNotiSelect} value=\"9\">9 Blocks</li>\n                                                    <li onClick={this.pendingNotiSelect} value=\"18\">18 Blocks</li>\n                                                    <li onClick={this.pendingNotiSelect} value=\"36\">36 Blocks</li>\n                                                    <li onClick={this.pendingNotiSelect} value=\"72\">72 Blocks</li>\n                                                    <li onClick={this.pendingNotiSelect} value=\"144\">144 Blocks</li>\n                                                </ul>\n                                            ) : (null)}\n                                            <input type=\"hidden\" name=\"changeme\" />\n                                        </div>\n                                        <small style={{ gridArea: \"otherHeaderInfo\" }}>Last Anchor: {lastConf} | Address Balance: {balance * 0.00000001} | Count: {data.length} | </small>\n                                    </div>\n                                </div>\n                                <table className=\"FullTable\" id=\"style-7\">\n                                    <thead>\n                                        <tr>\n                                            <th className=\"headerheight\">HEIGHT</th>\n                                            <th className=\"headertime\">START TIME</th>\n                                            <th className=\"headerkeymr\">KEYMR</th>\n                                            <th className=\"headerbtchash\">BTC HASH</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {data.map((anchor) => (\n                                            <tr key={`${anchor._id}`} className=\"anchor-row\">\n                                                <td key={`${anchor._id}--height`} style={{ paddingLeft: \"1.5rem !important\" }} className=\"bodyheight\">{anchor.height}</td>\n                                                <td key={`${anchor._id}--started_at`} className=\"bodystarted\">{moment(anchor.started_at).format('YYYY-MM-DD HH:mm')}</td>\n                                                <td key={`${anchor._id}--keymr`} className=\"bodykeymr\"><a href={`http://explorer.factom.com/dblocks/${anchor.keymr}`} target=\"_blank\">{anchor.keymr}</a></td>\n                                                <td key={`${anchor._id}--btchash`} className=\"bodybtchash\">\n                                                    {anchor.btc_hash === undefined ? (\n                                                        <a style={{ color: \"#4A4A4A\" }}>{`BTC has not recieved transaction yet.`}</a>\n                                                    ) : (\n                                                            <a href={`https://www.blockchain.com/btc/tx/${anchor.btc_hash}`} target=\"_blank\">{anchor.btc_hash}</a>\n                                                        )}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : (\n                                <div className=\"HeroGroup\">\n                                    <div className=\"HeroGroupHeader\">\n                                        <h1>Pending {name} Anchors</h1>\n                                        <div className=\"tableHeaderContent\">\n                                            <div className=\"select\" style={{ gridArea: \"offNoti \", display: \"grid\", gridTemplateColumns: \"230px 130px\" }}>\n                                                <small style={{ justifySelf: \"start\" }}>Turn off notifications for: </small>\n                                                <span className=\"placeholder\" onClick={this.showMenuOffNoti}>{holder}</span>\n                                                {offNotiToggle ? (\n                                                    <ul>\n                                                        <li onClick={this.offNotiSelect} value=\"30\">30 Minutes</li>\n                                                        <li onClick={this.offNotiSelect} value=\"1\">1 hour</li>\n                                                        <li onClick={this.offNotiSelect} value=\"3\">3 hours</li>\n                                                        <li onClick={this.offNotiSelect} value=\"6\">6 hours</li>\n                                                        <li onClick={this.offNotiSelect} value=\"9\">9 hours</li>\n                                                        <li onClick={this.offNotiSelect} value=\"12\">12 hours</li>\n                                                        <li onClick={this.offNotiSelect} value=\"24\">1 Day</li>\n                                                    </ul>\n                                                ) : (null)}\n                                                <input type=\"hidden\" name=\"changeme\" />\n                                            </div>\n                                            <div className=\"select\" style={{ gridArea: \"pendingNoti\", display: \"grid\", gridTemplateColumns: \"230px 130px\" }}>\n                                                <small style={{ justifySelf: \"start\" }}># of blocks before notifying: </small>\n                                                <span className=\"placeholder\" onClick={this.showMenuPendingNoti}>{holder}</span>\n                                                {pendingNotiToggle ? (\n                                                    <ul>\n                                                        <li onClick={this.pendingNotiSelect} value=\"1\">1 block</li>\n                                                        <li onClick={this.pendingNotiSelect} value=\"2\">2 blocks</li>\n                                                        <li onClick={this.pendingNotiSelect} value=\"4\">4 blocks</li>\n                                                        <li onClick={this.pendingNotiSelect} value=\"9\">9 blocks</li>\n                                                        <li onClick={this.pendingNotiSelect} value=\"18\">18 blocks</li>\n                                                        <li onClick={this.pendingNotiSelect} value=\"36\">36 blocks</li>\n                                                        <li onClick={this.pendingNotiSelect} value=\"72\">72 blocks</li>\n                                                        <li onClick={this.pendingNotiSelect} value=\"144\">144 blocks</li>\n                                                    </ul>\n                                                ) : (null)}\n                                                <input type=\"hidden\" name=\"changeme\" />\n                                            </div>\n                                            <small style={{ gridArea: \"otherHeaderInfo\" }}>Last Anchor: {lastConf} | Address Balance: {balance * 0.00000001} | Count: {data.length} | </small>\n                                        </div>\n                                    </div>\n                                    <div className=\"NoAnchors\"><h1>No pending Anchors!</h1></div>\n                                </div>\n                            )\n                    ) : (\n                            <div className=\"HeroGroup\">\n                                <div className=\"HeroGroupHeader\">\n                                    <h1>Pending {name} Anchors</h1>\n                                </div>\n                                <div>{data}</div>\n                            </div>\n                        )}\n                </div>\n\n\n\n                <style jsx=\"true\">{`\n                    .Hero {\n                        max-width: 1400px;\n                        justify-self: center;\n                        width: -webkit-fill-available;\n                        grid-area: table;\n                        border-radius: 0.4rem;\n                        z-index: 1;\n                        background: #FFF;\n                        -webkit-box-shadow: 0 0 8px 0 rgba(0,0,0, 0.12);\n                        box-shadow: 0 0 8px 0 rgba(0,0,0, 0.9);\n                        animation: HeroAnimation  3s ;\n                        animation-fill-mode: forwards; \n                        animation-timing-function: cubic-bezier(0.2, 0.8, 0.2, 1);\n                    }\n                    .HeroGroup {\n                        margin: 0 auto;\n                        padding: 2rem 2.5rem;\n                        display: grid;\n                            grid-template-columns: 1fr;\n                            grid-template-rows:  9rem minmax(300px,720px) 2fr;\n                            grid-template-areas: \n                            \"tableheader\"\n                            \"tablebody\"\n                            \"tablefooter\";\n                            grid-row-gap: 15px;\n                        text-align: center;\n                    }\n                    .HeroGroupHeader {\n                        grid-area: tableheader;\n                        display: grid;\n                        grid-template-rows: repeat(2, 1fr);\n                    }\n                    .HeroGroupHeader small {\n                        justify-self: end;\n                        align-self: end;\n                        font-weight: 600;\n                    }\n                    .tableHeaderContent {\n                        display: grid;\n                        grid-template-columns: auto 1fr;\n                            grid-template-rows:  auto 1fr;\n                            grid-template-areas: \n                            \"pendingNoti .\"\n                            \"offNoti otherHeaderInfo\";\n                        grid-column-gap: 10px;\n                    }\n                    .Hero h1 {\n                        margin: 0;\n                        justify-self: start;\n                        color: #000;\n                        font-size: 2rem;\n                        font-weight: 700;\n                        line-height: 1.2;\n                    }\n                    .Hero p {\n                        color: rgba(255, 255, 255, 0.8);\n                        font-size: 30px;\n                        line-height: 1.5;\n                        animation: HeroAnimation 3s 0.2s forwards cubic-bezier(0.2, 0.8, 0.2, 1);\n                        opacity: 0;\n                    }\n                    table {\n                        display: block;\n                        overflow-x: auto;\n                        border-collapse: collapse;\n                        text-align: left;\n                        white-space: nowrap;\n                    }\n\n                    #style-7::-webkit-scrollbar-track {\n                        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n                        background-color: #F5F5F5;                                                                     \n                    }\n                    #style-7::-webkit-scrollbar {\n                        width: 10px;\n                        background-color: #F5F5F5;\n                    }\n                    #style-7::-webkit-scrollbar-thumb {\n                        background-image: -webkit-gradient(linear,\n\t\t\t\t\t\t\t\t\t   40% 0%,\n\t\t\t\t\t\t\t\t\t   75% 84%,\n\t\t\t\t\t\t\t\t\t   from(#142C3C),\n\t\t\t\t\t\t\t\t\t   to(#142C3C),\n\t\t\t\t\t\t\t\t\t   color-stop(.7,#142c3cb8));\n                        /* background-color: #142C3C; */\n                    }\n\n                    table thead,\n                    table tbody {\n                        display: grid;\n                    }\n                    table  tr {\n                        display: grid;\n                        grid-template-columns: minmax(100px,170px) minmax(100px,200px) minmax(100px,1fr) minmax(100px,1fr);\n                        grid-template-areas: \" colheight coltime colkeymr colbtchash \";\n                    }\n                    table thead th {\n                        background: #E8E8E8;\n                        font-size: 70%;\n                        padding: 1.2rem;\n                        font-weight: 600;\n                    }\n                    table thead th:first-child {\n                        border-top-left-radius: 0.4rem;\n                        border-bottom-left-radius: 0.4rem;\n                    }\n                    .headerheight .bodyheight {\n                        grid-area:  colheight;\n                        padding-right: 0;\n                    }\n                    .headertime .bodystarted {\n                        grid-area: coltime;\n                    }\n                    .headerkeymr {\n                        grid-area: colkeymr;\n                    }\n                    .headerbtchash {\n                        grid-area: colbtchash;\n                        \n                    }\n                    thead th:not(:first-child) {\n                        padding-left: 0 !important;\n                    }\n                    tbody td {\n                        font-size: 70%;\n                        padding: 1.5rem;\n                        letter-spacing: 1.2px;\n                        color: #4A4A4A;\n                        border-bottom: 1px solid #E9E9E9;\n                    }\n                    tbody td:not(:first-child) {\n                        padding-left: 0 !important;\n                    }\n                    .bodykeymr {\n                        display: block;\n                        font-family: 'Roboto Mono', monospace;\n                        overflow: hidden;\n                        text-overflow: ellipsis;\n                    }\n                    .bodykeymr a {\n                        text-transform: none;\n                        background: none;\n                        color: #388FC9;\n                    }\n                    .bodybtchash {\n                        display: block;\n                        font-family: 'Roboto Mono', monospace;\n                        overflow: hidden;\n                        text-overflow: ellipsis;\n                    }\n                    .bodybtchash a {\n                        text-transform: none;\n                        background: none;\n                        color: #388FC9;\n                    }\n                    {/* .custom-dropdown {\n                        position: relative;\n                        display: inline-block;\n                        vertical-align: middle;\n                        margin: 10px; /* demo only */\n                    }\n\n                    .custom-dropdown select {\n                        background-color: #2c3e50;\n                        color: #fff;\n                        font-size: inherit;\n                        padding: .5em;\n                        padding-right: 2.5em;\t\n                        border: 0;\n                        margin: 0;\n                        border-radius: 3px;\n                        text-indent: 0.01px;\n                        text-overflow: '';\n                        -webkit-appearance: button; /* hide default arrow in chrome OSX */\n                    }\n                    .custom-dropdown::before,\n                    .custom-dropdown::after {\n                        content: \"\";\n                        position: absolute;\n                        pointer-events: none;\n                    }\n\n                    .custom-dropdown::after { \n                        content: \"\\u25bc\";\n                        height: 1em;\n                        font-size: .625em;\n                        line-height: 1;\n                        right: 1.2em;\n                        top: 50%;\n                        margin-top: -.5em;\n                    }\n\n                    .custom-dropdown::before { \n                        width: 2em;\n                        right: 0;\n                        top: 0;\n                        bottom: 0;\n                        border-radius: 0 3px 3px 0;\n                    }\n\n                    .custom-dropdown select[disabled] {\n                        color: rgba(0,0,0,.3);\n                    }\n\n                    .custom-dropdown select[disabled]::after {\n                        color: rgba(0,0,0,.1);\n                    }\n\n                    .custom-dropdown::before {\n                        background-color: rgba(0,0,0,.15);\n                    }\n\n                    .custom-dropdown::after {\n                        color: rgba(0,0,0,.4);\n                    }                     */}\n\n\n                    .select {\n                        position: relative;\n                        display: block;\n                        width: 100%;\n                        text-align: left;\n                        user-select: none;\n                        -webkit-touch-callout: none;\n                    }\n                    .placeholder {\n                        position: relative;\n                        display: block;\n                        top: 6px;\n                        background-color: #142C3C;\n                        z-index: 1;\n                        padding: .5em;\n                        border-radius: 0.4rem;\n                        cursor: pointer;\n                        font-size: 70%;\n                        color: #cccccc;                        \n                        height: 20px;\n                        align-self: end;\n                    }\n                    .placeholder:hover {\n                        background: darken(#142C3C,2%);\n                    }\n                    .placeholder:after {\n                        position: absolute;\n                        margin-left: 2em;\n                        top: 50%;\n                        transform: translateY(-50%);\n                        font-family: 'FontAwesome';\n                        content: '\\u25bc';\n                        z-index: 10;\n                        font-size: 70%;\n                    }\n                    .short:after {\n                        margin-left: 5.5em;\n                    }\n                    .singlehours:after {\n                        margin-left: 4.5em;\n                    }\n                    .doublehours:after {\n                        margin-left: 3.8em;\n                    }\n                    doubleblks\n                    .small:after {\n                        position: absolute;\n                        margin-left: 4.7em;\n                        top: 50%;\n                        transform: translateY(-50%);\n                        font-family: 'FontAwesome';\n                        content: '\\u25bc';\n                        z-index: 10;\n                        font-size: 70%;\n                    }\n\n                    ul {\n                        position: absolute;\n                        overflow: hidden;\n                        overflow-y: auto;\n                        width: 35%;\n                        background: #fff;\n                        border-radius: 2px;\n                        top: 100%;\n                        left: 64.5%;\n                        list-style: none;\n                        margin: 5px 0 0 0;\n                        padding: 0;\n                        z-index: 100;\n                        box-shadow: 0 0 8px 0 rgba(0,0,0,0.9);\n                    }\n                    li {\n                        display: block;\n                        text-align: left;\n                        padding: 0.8em 1em 0.8em 1em;\n                        color: #999;\n                        cursor: pointer;\n                        font-size: 70%;\n                    }\n                    li:hover {\n                        background: #4ebbf0;\n                        color: #fff;\n                    }\n\n\n                    @media (min-width: 1235px) {\n                        tbody td:first-child .headerheight{\n                            padding-left: 2rem;\n                        }\n                    }\n                    @media (max-width: 830px) {\n                        .tableHeaderContent {\n                            display: grid;\n                            grid-template-columns: auto;\n                            grid-template-rows:  auto 1fr 45px;\n                            grid-template-areas: \n                                \"offNoti\"\n                                \"pendingNoti\"\n                                \"otherHeaderInfo\";\n                            grid-column-gap: 10px;\n                            grid-row-gap: 10px;\n                        }\n                        .tableHeaderContent small {\n                            justify-self: start;\n                        }\n                        .HeroGroup {\n                            padding: 30px 20px;\n                            grid-template-rows: 10rem minmax(300px,720px) 2fr;\n                        }\n                    }\n                    @media (max-width: 700px) {\n                        table  tr {\n                            grid-template-columns: minmax(100px,170px) minmax(100px,1fr) minmax(100px,1fr);\n                            grid-template-areas: \" colheight colkeymr colbtchash \"\n                        }\n                        .headertime, .bodystarted {\n                            display: none;\n                        }\n                    }\n                    @media (max-width: 686px) {\n                        .HeroGroup {\n                            padding: 30px 20px;\n                            grid-template-rows: 10rem minmax(300px,720px) 2fr;\n                        }\n                    }\n                    @media (max-width: 644px) {\n                        .tableHeaderContent {\n                            display: grid;\n                            grid-template-columns: auto;\n                            grid-template-rows:  auto 1fr 45px;\n                            grid-template-areas: \n                                \"offNoti\"\n                                \"pendingNoti\"\n                                \"otherHeaderInfo\";\n                            grid-column-gap: 10px;\n                            grid-row-gap: 10px;\n                        }\n                    \n                        .Hero h1 {\n                            font-size: 35px;\n                            font-weight: 400;\n                        }\n                    \n                        .Hero p {\n                            font-size: 24px;\n                        }\n                    }\n                    @media (max-width: 506px) {\n                    \n                        .Hero h1 {\n                            font-size: 25px;\n                            font-weight: 400;\n                        }\n                    \n                        .Hero p {\n                            font-size: 24px;\n                        }\n\n                        .headertime {\n                            display: none;\n                        }\n                    }\n                    \n                    @keyframes HeroAnimation {\n                        0% {\n                            opacity: 0;\n                            transform: translateY(20px);\n                        }\n                    \n                        100% {\n                            opacity: 1;\n                            transform: translateY(0px);\n                        }\n                    }\n                `}</style>\n            </Layout>\n        )\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA4BA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAjCA;AAmCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAvCA;AAyCA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AArDA;AAuDA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA5DA;AA8DA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAlEA;AAoEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAnEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AApBA;AAqBA;AACA;;;AAiDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AALA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AALA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AATA;AAklIA;AAAA;AAAA;AAohBA;;;AAhlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AA1BA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}